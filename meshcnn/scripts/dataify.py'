xyimport ijson
import os
import random
import shutil
import numpy as np

mean = 0
std = 0
with open("./data/merged_data.json", "rb") as f:
        parser = ijson.parse(f)
        scores = []
        for file in parser:
                if (file[1] == 'string'):
                        key, value = file[0], file[-1]
                        name = os.path.basename(key)[:-4] + "_simplified.obj"
                        location = os.path.join("./scripts/simplified", "output", name)

                        if (not os.path.isfile(location)):
                                continue
                        scores.append(float(value))
        if (scores):
                yipee = np.array(scores)
                mean = np.mean(yipee)
                std = np.std(yipee)
                
with open("./data/merged_data.json", "rb") as f:
        parser = ijson.parse(f)
        for file in parser:
                if (file[1] == 'string'):
                        key, value = file[0], file[-1]
                        name = os.path.basename(key)[:-4] + "_simplified.obj"
                        location = os.path.join("./scripts/simplified", "output", name)

                        if (not os.path.isfile(location)):
                                continue

                        # does train test split
                        z_score = (float(value) - mean)/std
                        score = int(max(min(-1.5, z_score), 1.5)*10)
                        print(score)
                        # we ball, make the classes I guess                                                                              
                        # new_dir = str(score)
                        # if (not os.path.exists(os.path.join("./dataset/sdata", new_dir))):
                        #         os.mkdir(os.path.join("./dataset/sdata", new_dir))
                        #         print("HELLO???")
                        #         if (not os.path.exists(os.path.join("./dataset/sdata", new_dir, "test"))):
                        #                 os.mkdir(os.path.join("./dataset/sdata", new_dir, "test"))
                        #                 os.mkdir(os.path.join("./dataset/sdata", new_dir, "train"))
                        #         if (not os.path.exists(os.path.join("./dataset/sdata", new_dir, "train"))):
                        #                 os.mkdir(os.path.join("./dataset/sdata", new_dir, "train"))
                        #                 os.mkdir(os.path.join("./dataset/sdata", new_dir, "train"))
                        # if (random.random() < 0.2):
                        #         newhome = os.path.join("./dataset/sdata", new_dir, "test", name)
                        #         shutil.move(location, newhome)
                        #         print("new file test", newhome)
                        # else:
                        #         newhome = os.path.join("./dataset/sdata", new_dir, "train", name)
                        #         shutil.move(location, newhome)
                        #         print("new file train", newhome)
